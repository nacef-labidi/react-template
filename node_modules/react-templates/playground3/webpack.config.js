/*eslint no-path-concat:0*/
'use strict'

const path = require('path')
const webpack = require('webpack')
const commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js')
const CopyWebpackPlugin = require('copy-webpack-plugin')

module.exports = {
    //devtool: 'eval',
    devtool: 'source-map',
    context: __dirname,
    entry: {
        //fiddle: ['webpack-hot-middleware/client',
        //         './src/fiddle-main.js'],
        // home2: ['webpack-dev-server/client?http://localhost:8080/',
        //        'webpack/hot/only-dev-server',
        //        './src/a/home-main.js'],
        fiddle: ['webpack-dev-server/client?http://localhost:8080/',
               'webpack/hot/only-dev-server',
               './src/fiddle-main.js'],
        home: ['webpack-dev-server/client?http://localhost:8080/',
               'webpack/hot/only-dev-server',
                 './src/home-main.js']
    },
    output: {
        filename: '[name].js',
        path: path.join(__dirname, 'dist'),
        // publicPath: '/static/'
        publicPath: 'http://localhost:8080/dist'
    },
    plugins: [
        /*commonsPlugin, */
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoErrorsPlugin(),
        new CopyWebpackPlugin([{from: './index.html'}])
    ],
    externals: {
        // require("jquery") is external and available on the global var jQuery
        jquery: 'jQuery',
        react: 'React',
        'react-dom': 'ReactDOM',
        //'react/addons': 'React',
        lodash: '_',
        bootstrap: 'bootstrap',
        firebase: 'Firebase',
        codemirror: 'CodeMirror',
        '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'
        //'./libs/codemirror-4.8/mode/javascript/javascript',
        //'./libs/codemirror-4.8/addon/hint/html-hint',
        //'./libs/codemirror-4.8/addon/hint/show-hint',
        //'./libs/codemirror-4.8/addon/hint/xml-hint',
        //'./libs/codemirror-4.8/addon/hint/html-hint',
        ////'./libs/codemirror-4.8/addon/display/panel',
        //'./libs/codemirror-4.8/mode/xml/xml',
        ////'./libs/codemirror-4.8/mode/css/css',
        //'./libs/codemirror-4.8/addon/runmode/runmode'
    },
    resolve: {
        // you can now require('file') instead of require('file.coffee')
        extensions: ['', '.js', '.json'],
        alias: {
            //bootstrap: 'empty'
        }
    },
    module: {
        loaders: [
            {test: /\.js$/, exclude: /node_modules/, loaders: ['babel']},
            {test: /\.jsx$/, loaders: ['babel-loader']},
            {test: /\.html$/, loader: 'file?name=[name].[ext]'},
            {test: /\.json$/, loader: 'json-loader'},
            {test: /\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders
            {test: /\.css$/, loader: 'style-loader!css-loader'},
            {test: /\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest

            //-m commonjs --target-version 0.14.0 --react-import-path react
            {test: /\.rt/, exclude: /node_modules|samples/, loaders: ['react-templates-loader?target-version=0.14.0&modules=commonjs&react-import-path=react']},
            {test: /\.text/, loaders: ['raw-loader']}
            //"md|markdown": ["html-loader", "markdown-loader"]
        ]
    }
};
